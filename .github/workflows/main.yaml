---
name: build and push image to aws ecr
on:
  push: 
    branches: [ main ]
jobs:
  build-and-push:
    name: Build and push to ecr
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to aws ecr
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: timesheet-ft
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    # - name: Execute SSH commmands on remote server
    #   id: ec2-command
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: timesheet-ft
    #     IMAGE_TAG: latest
    #   uses: JimCronqvist/action-ssh@master
    #   with:
    #     hosts: 'ec2-user@ec2-18-181-220-91.ap-northeast-1.compute.amazonaws.com'
    #     privateKey: ${{ secrets.EC2_SSH_KEY }}
    #     debug: false
    #     command: |
    #       hostname -a
    #       whoami
    #       ls -a
    #       sudo systemctl start docker
    #       docker_login=$(aws ecr get-login --no-include-email)
    #       $docker_login
    #       docker-compose down
    #       docker image rm -f $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #       docker-compose up -d
